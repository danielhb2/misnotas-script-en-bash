#!/bin/bash
# Directorio base para las notas
NOTAS_DIR="$HOME/mis_notas"
# Crear el directorio si no existe
mkdir -p "$NOTAS_DIR"

# Función para mostrar contenido usando bat o cat
mostrar_contenido() {
    if command -v bat &> /dev/null; then
        bat --style=plain "$1"
    else
        cat "$1"
    fi
}

# Función para mostrar el menú usando fzf
mostrar_menu() {
    opcion=$(printf "Nueva nota\nNueva nota anexa\nEditar nota\nPrevisualizar notas\nAgregar contenido\nEliminar nota\nBuscar texto en notas\nSalir" | \
    fzf --height=13 --border=rounded  --preview-window=70%:wrap --prompt="Selecciona una opción > " --header="================== ] GESTOR DE NOTAS [ ==================" --layout=reverse --preview-label='] CONTENIDO ['  --no-multi --color='header:cyan')
    
    case $opcion in
        "Nueva nota") nueva_nota "txt" ;;
        "Nueva nota anexa") nueva_nota "anexo" ;;
        "Editar nota") editar_nota ;;
        "Previsualizar notas") previsualizar_notas ;;
        "Agregar contenido") agregar_contenido ;;
        "Eliminar nota") eliminar_nota ;;
        "Buscar texto en notas") buscar_texto ;;
        "Salir") echo "Saliendo..."; exit 0 ;;
        *) return ;;
    esac
}

# Función para crear una nueva nota
nueva_nota() {
    tipo=$1
    fecha=$(date +%d-%m-%Y)
    if [ "$tipo" = "anexo" ]; then
        nota_path="$NOTAS_DIR/$(date +%Y)/$fecha.anexo"
    else
        nota_path="$NOTAS_DIR/$(date +%Y)/$fecha.txt"
    fi
    
    mkdir -p "$NOTAS_DIR/$(date +%Y)"
    if [[ -f "$nota_path" ]]; then
        respuesta=$(printf "Sí\nNo" | fzf --height=5  --prompt="Ya existe una nota ${tipo} para hoy. ¿Deseas agregar contenido? > ")
        if [[ "$respuesta" == "Sí" ]]; then
            agregar_contenido "$nota_path"
        else
            echo "Operación cancelada."
            sleep 1
        fi
    else
        nano "$nota_path"
    fi
}

# Función para editar una nota existente
editar_nota() {
    nota_path=$(encontrar_nota)
    if [[ -n "$nota_path" ]]; then
        nano "$nota_path"
    else
        echo "No se encontró ninguna nota."
        sleep 1
    fi
}

# Función para previsualizar notas
previsualizar_notas() {
    nota_path=$(encontrar_nota)
    if [[ -n "$nota_path" ]]; then
        clear
        mostrar_contenido "$nota_path"
        echo -e "\nPresiona Enter para volver al menú..."
        read
    else
        echo "No se encontró ninguna nota."
        sleep 1
    fi
}

# Función para agregar contenido a una nota existente
agregar_contenido() {
    nota_path=$1
    if [[ -z "$nota_path" ]]; then
        nota_path=$(encontrar_nota)
    fi
    if [[ -n "$nota_path" ]]; then
        echo "Escribe el contenido que deseas agregar (Ctrl+D para finalizar):"
        cat >> "$nota_path"
    else
        echo "No se encontró ninguna nota."
        sleep 1
    fi
}

# Función para eliminar una nota
eliminar_nota() {
    nota_path=$(encontrar_nota)
    if [[ -n "$nota_path" ]]; then
        confirmacion=$(printf "Sí\nNo" | fzf --height=5 --prompt="¿Estás seguro de que deseas eliminar esta nota? > ")
        if [[ "$confirmacion" == "Sí" ]]; then
            rm "$nota_path"
            echo "Nota eliminada correctamente."
            sleep 1
        else
            echo "Operación cancelada."
            sleep 1
        fi
    else
        echo "No se encontró ninguna nota."
        sleep 1
    fi
}

# Función para buscar texto en las notas
buscar_texto() {
    echo -n "Introduce el texto que deseas buscar: "
    read texto
    if [[ -z "$texto" ]]; then
        echo "No se introdujo ningún texto."
        sleep 1
        return
    fi
    
    # Buscar el texto en todas las notas (tanto .txt como .anexo)
    resultados=$(grep -r -i -l "$texto" "$NOTAS_DIR")
    if [[ -z "$resultados" ]]; then
        echo "No se encontraron notas que contengan el texto '$texto'."
        sleep 1
    else
        echo "Notas que contienen el texto '$texto':"
        nota_path=$(echo "$resultados" | fzf --preview="grep --color=always -i '$texto' {}")
        if [[ -n "$nota_path" ]]; then
            accion=$(printf "Previsualizar nota\nEditar nota\nVolver al menú principal" | \
                    fzf --height=8 \
                        --prompt="¿Qué deseas hacer con la nota seleccionada? > ")
            case $accion in
                "Previsualizar nota") 
                    clear
                    mostrar_contenido "$nota_path"
                    echo -e "\nPresiona Enter para volver al menú..."
                    read
                    ;;
                "Editar nota") nano "$nota_path" ;;
                *) return ;;
            esac
        else
            echo "No se seleccionó ninguna nota."
            sleep 1
        fi
    fi
}

# Función para encontrar una nota usando fzf
encontrar_nota() {
    if command -v bat &> /dev/null; then
        find "$NOTAS_DIR" -type f \( -name "*.txt" -o -name "*.anexo" \) | \
        fzf --preview="bat --style=plain --color=always {}" \
            --header="Usa / para buscar, Enter para seleccionar" \
             --preview-label='] CONTENIDO [' \
            --preview-window=right:70%:wrap
    else
        find "$NOTAS_DIR" -type f \( -name "*.txt" -o -name "*.anexo" \) | \
        fzf --preview="cat {}" \
            --header="Usa / para buscar, Enter para seleccionar" \
             --preview-label='] CONTENIDO [' \
            --preview-window=right:70%:wrap
    fi
}

# Bucle principal del menú
while true; do
    clear
    mostrar_menu
    if [[ $? -ne 0 ]]; then
        continue
    fi
done
